//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FuiteAPITest.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IReportService")]
    public interface IReportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/AddReport", ReplyAction="http://tempuri.org/IReportService/AddReportResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultChanges))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultIp))]
        FuiteAPI.Result AddReport(FuiteAPI.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/AddReport", ReplyAction="http://tempuri.org/IReportService/AddReportResponse")]
        System.Threading.Tasks.Task<FuiteAPI.Result> AddReportAsync(FuiteAPI.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SetReport", ReplyAction="http://tempuri.org/IReportService/SetReportResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultChanges))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultIp))]
        FuiteAPI.Result SetReport(string ticket, FuiteAPI.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SetReport", ReplyAction="http://tempuri.org/IReportService/SetReportResponse")]
        System.Threading.Tasks.Task<FuiteAPI.Result> SetReportAsync(string ticket, FuiteAPI.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReports", ReplyAction="http://tempuri.org/IReportService/GetReportsResponse")]
        FuiteAPI.ResultReports GetReports(string ticket, FuiteAPI.State state, int minIndex, int maxIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReports", ReplyAction="http://tempuri.org/IReportService/GetReportsResponse")]
        System.Threading.Tasks.Task<FuiteAPI.ResultReports> GetReportsAsync(string ticket, FuiteAPI.State state, int minIndex, int maxIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetChanges", ReplyAction="http://tempuri.org/IReportService/GetChangesResponse")]
        FuiteAPI.ResultChanges GetChanges(string ticket, int reportid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetChanges", ReplyAction="http://tempuri.org/IReportService/GetChangesResponse")]
        System.Threading.Tasks.Task<FuiteAPI.ResultChanges> GetChangesAsync(string ticket, int reportid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReport", ReplyAction="http://tempuri.org/IReportService/GetReportResponse")]
        FuiteAPI.ResultReports GetReport(string ticket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReport", ReplyAction="http://tempuri.org/IReportService/GetReportResponse")]
        System.Threading.Tasks.Task<FuiteAPI.ResultReports> GetReportAsync(string ticket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SetBanIp", ReplyAction="http://tempuri.org/IReportService/SetBanIpResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultReports))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultChanges))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FuiteAPI.ResultIp))]
        FuiteAPI.Result SetBanIp(string ticket, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SetBanIp", ReplyAction="http://tempuri.org/IReportService/SetBanIpResponse")]
        System.Threading.Tasks.Task<FuiteAPI.Result> SetBanIpAsync(string ticket, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/IsIpBan", ReplyAction="http://tempuri.org/IReportService/IsIpBanResponse")]
        FuiteAPI.ResultIp IsIpBan(string ticket, string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/IsIpBan", ReplyAction="http://tempuri.org/IReportService/IsIpBanResponse")]
        System.Threading.Tasks.Task<FuiteAPI.ResultIp> IsIpBanAsync(string ticket, string ip);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportServiceChannel : FuiteAPITest.ServiceReference1.IReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<FuiteAPITest.ServiceReference1.IReportService>, FuiteAPITest.ServiceReference1.IReportService {
        
        public ReportServiceClient() {
        }
        
        public ReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FuiteAPI.Result AddReport(FuiteAPI.ReportContract report) {
            return base.Channel.AddReport(report);
        }
        
        public System.Threading.Tasks.Task<FuiteAPI.Result> AddReportAsync(FuiteAPI.ReportContract report) {
            return base.Channel.AddReportAsync(report);
        }
        
        public FuiteAPI.Result SetReport(string ticket, FuiteAPI.ReportContract report) {
            return base.Channel.SetReport(ticket, report);
        }
        
        public System.Threading.Tasks.Task<FuiteAPI.Result> SetReportAsync(string ticket, FuiteAPI.ReportContract report) {
            return base.Channel.SetReportAsync(ticket, report);
        }
        
        public FuiteAPI.ResultReports GetReports(string ticket, FuiteAPI.State state, int minIndex, int maxIndex) {
            return base.Channel.GetReports(ticket, state, minIndex, maxIndex);
        }
        
        public System.Threading.Tasks.Task<FuiteAPI.ResultReports> GetReportsAsync(string ticket, FuiteAPI.State state, int minIndex, int maxIndex) {
            return base.Channel.GetReportsAsync(ticket, state, minIndex, maxIndex);
        }
        
        public FuiteAPI.ResultChanges GetChanges(string ticket, int reportid) {
            return base.Channel.GetChanges(ticket, reportid);
        }
        
        public System.Threading.Tasks.Task<FuiteAPI.ResultChanges> GetChangesAsync(string ticket, int reportid) {
            return base.Channel.GetChangesAsync(ticket, reportid);
        }
        
        public FuiteAPI.ResultReports GetReport(string ticket, int id) {
            return base.Channel.GetReport(ticket, id);
        }
        
        public System.Threading.Tasks.Task<FuiteAPI.ResultReports> GetReportAsync(string ticket, int id) {
            return base.Channel.GetReportAsync(ticket, id);
        }
        
        public FuiteAPI.Result SetBanIp(string ticket, string ip) {
            return base.Channel.SetBanIp(ticket, ip);
        }
        
        public System.Threading.Tasks.Task<FuiteAPI.Result> SetBanIpAsync(string ticket, string ip) {
            return base.Channel.SetBanIpAsync(ticket, ip);
        }
        
        public FuiteAPI.ResultIp IsIpBan(string ticket, string ip) {
            return base.Channel.IsIpBan(ticket, ip);
        }
        
        public System.Threading.Tasks.Task<FuiteAPI.ResultIp> IsIpBanAsync(string ticket, string ip) {
            return base.Channel.IsIpBanAsync(ticket, ip);
        }
    }
}
