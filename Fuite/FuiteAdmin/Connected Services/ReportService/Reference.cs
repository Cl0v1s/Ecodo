//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FuiteAdmin.ReportService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportContract", Namespace="http://schemas.datacontract.org/2004/07/FuiteAPI")]
    [System.SerializableAttribute()]
    public partial class ReportContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuiteAdmin.ReportService.State StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuiteAdmin.ReportService.State State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="State", Namespace="http://schemas.datacontract.org/2004/07/FuiteAPI")]
    public enum State : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Affected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/FuiteAPI")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FuiteAdmin.ReportService.ReportContract[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FuiteAdmin.ReportService.ReportContract[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportService.IReportService")]
    public interface IReportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/AddReport", ReplyAction="http://tempuri.org/IReportService/AddReportResponse")]
        FuiteAdmin.ReportService.Result AddReport(FuiteAdmin.ReportService.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/AddReport", ReplyAction="http://tempuri.org/IReportService/AddReportResponse")]
        System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> AddReportAsync(FuiteAdmin.ReportService.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SetReport", ReplyAction="http://tempuri.org/IReportService/SetReportResponse")]
        FuiteAdmin.ReportService.Result SetReport(string ticket, FuiteAdmin.ReportService.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/SetReport", ReplyAction="http://tempuri.org/IReportService/SetReportResponse")]
        System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> SetReportAsync(string ticket, FuiteAdmin.ReportService.ReportContract report);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReports", ReplyAction="http://tempuri.org/IReportService/GetReportsResponse")]
        FuiteAdmin.ReportService.Result GetReports(string ticket, FuiteAdmin.ReportService.State state, int minIndex, int maxIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReports", ReplyAction="http://tempuri.org/IReportService/GetReportsResponse")]
        System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> GetReportsAsync(string ticket, FuiteAdmin.ReportService.State state, int minIndex, int maxIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReport", ReplyAction="http://tempuri.org/IReportService/GetReportResponse")]
        FuiteAdmin.ReportService.Result GetReport(string ticket, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReport", ReplyAction="http://tempuri.org/IReportService/GetReportResponse")]
        System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> GetReportAsync(string ticket, int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportServiceChannel : FuiteAdmin.ReportService.IReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<FuiteAdmin.ReportService.IReportService>, FuiteAdmin.ReportService.IReportService {
        
        public ReportServiceClient() {
        }
        
        public ReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FuiteAdmin.ReportService.Result AddReport(FuiteAdmin.ReportService.ReportContract report) {
            return base.Channel.AddReport(report);
        }
        
        public System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> AddReportAsync(FuiteAdmin.ReportService.ReportContract report) {
            return base.Channel.AddReportAsync(report);
        }
        
        public FuiteAdmin.ReportService.Result SetReport(string ticket, FuiteAdmin.ReportService.ReportContract report) {
            return base.Channel.SetReport(ticket, report);
        }
        
        public System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> SetReportAsync(string ticket, FuiteAdmin.ReportService.ReportContract report) {
            return base.Channel.SetReportAsync(ticket, report);
        }
        
        public FuiteAdmin.ReportService.Result GetReports(string ticket, FuiteAdmin.ReportService.State state, int minIndex, int maxIndex) {
            return base.Channel.GetReports(ticket, state, minIndex, maxIndex);
        }
        
        public System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> GetReportsAsync(string ticket, FuiteAdmin.ReportService.State state, int minIndex, int maxIndex) {
            return base.Channel.GetReportsAsync(ticket, state, minIndex, maxIndex);
        }
        
        public FuiteAdmin.ReportService.Result GetReport(string ticket, int id) {
            return base.Channel.GetReport(ticket, id);
        }
        
        public System.Threading.Tasks.Task<FuiteAdmin.ReportService.Result> GetReportAsync(string ticket, int id) {
            return base.Channel.GetReportAsync(ticket, id);
        }
    }
}
